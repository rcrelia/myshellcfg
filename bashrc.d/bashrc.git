
if [ -f ~/.git-completion.sh ]; then
    source ~/.git-completion.sh
fi

CYAN='\e[36m\]'
GREEN='\e[38;5;64m'
YELLOW='\e[38;5;11m'
DARK_GRAY='\e[90m'
BLUE_UNDER='\e[4;94m\]'
WORKING_DIRECTORY='\W'
HOST='\h'
RESET_COLORS='\e[0m'

# Create an env var with the value of the current python virtualenv
set_active_venv() {
    export ACTIVE_VENV=""
    if [ "$VIRTUAL_ENV" != "" ]; then
        export ACTIVE_VENV="-$YELLOW`basename \"$VIRTUAL_ENV\"`$RESET_COLORS-"
    fi
}

# Update prompt to show git status and, when present, current python virtualenv

#Function call: __git_ps1(pre, post)
#pre is the part of the prompt before the branch status
#post is the part of the prompt after the branch status

if [ -f ~/.git-prompt.sh ]; then
    source ~/.git-prompt.sh
    export GIT_PS1_SHOWDIRTYSTATE=1
    export GIT_PS1_SHOWCOLORHINTS=true
    export GIT_PS1_SHOWUPSTREAM="auto"
    export GIT_PS1_SHOWUNTRACKEDFILES=1
    export GIT_PROMPT_ONLY_IN_REPO=1
    export VIRTUAL_ENV_DISABLE_PROMPT=1
    export PROMPT_COMMAND='set_active_venv; __git_ps1 "$CYAN[$RESET_COLORS$ACTIVE_VENV $DARK_GRAY$HOST | $BLUE_UNDER$WORKING_DIRECTORY$RESET_COLORS" " $CYAN]$ $RESET_COLORS"'
fi

